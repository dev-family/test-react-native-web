/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * api
 * OpenAPI spec version: 1.0.0
 */
export type GetApiPostsPostIdCommentsParams = {
  /**
   * Pagination
   */
  page?: string;
};

export type GetApiPostsParams = {
  /**
   * Tag to filter by
   */
  tagId?: string;
  /**
   * Pagination
   */
  page?: string;
};

/**
 * The resource has been created
 */
export type NotAcceptableResponse = void;

/**
 * The resource has been created
 */
export type NotFoundResponse = void;

/**
 * The resource has been created
 */
export type CreatedResponse = void;

/**
 * The request was accepted
 */
export type AcceptedResponse = void;

/**
 * Access token is missing or invalid
 */
export type ForbiddenResponse = void;

/**
 * createPostCommentValidator (Validator)
 */
export interface CreatePostCommentValidator {
  /** @maxLength 300 */
  comment?: string;
}

/**
 * updateUserValidator (Validator)
 */
export interface UpdateUserValidator {
  email?: string;
  /** @maxLength 32 */
  firstName?: string;
  /** @maxLength 32 */
  lastName?: string;
  /**
   * @minLength 5
   * @maxLength 32
   */
  username?: string;
}

/**
 * createPostVoteValidator (Validator)
 */
export interface CreatePostVoteValidator {
  optionId?: string;
}

/**
 * createPostValidator (Validator)
 */
export interface CreatePostValidator {
  description?: string;
  options?: number[];
  tagId?: number;
  /** @minLength 1 */
  title?: string;
}

/**
 * createPostTagValidator (Validator)
 */
export interface CreatePostTagValidator {
  /** @minLength 2 */
  tag?: string;
}

/**
 * createPostReactionValidator (Validator)
 */
export interface CreatePostReactionValidator {
  like?: boolean;
}

/**
 * loginValidator (Validator)
 */
export interface LoginValidator {
  password?: string;
  username?: string;
}

/**
 * createAccountValidator (Validator)
 */
export interface CreateAccountValidator {
  email?: string;
  /**
   * @minLength 8
   * @maxLength 32
   */
  password?: string;
  /**
   * @minLength 5
   * @maxLength 32
   */
  username?: string;
}

/**
 * User (Model)
 */
export interface User {
  coins?: UserCoin[];
  created_at?: string;
  email: string;
  first_name?: string;
  id: number;
  last_name?: string;
  password: string;
  updated_at?: string;
  username: string;
}

/**
 * UserPostLike (Model)
 */
export interface UserPostLike {
  created_at?: string;
  id: number;
  like: boolean;
  post?: Post;
  post_id?: number;
  updated_at?: string;
  user: User;
  user_id?: number;
}

/**
 * UserPostComment (Model)
 */
export interface UserPostComment {
  comment?: string;
  created_at?: string;
  deleted_at?: string;
  id: number;
  post?: Post;
  post_id?: number;
  replies?: UserPostComment[];
  reply_id?: number;
  updated_at?: string;
  user: User;
  user_id?: number;
}

/**
 * UserCoin (Model)
 */
export interface UserCoin {
  amount?: number;
  created_at?: string;
  id?: number;
  updated_at?: string;
  user: User;
  user_id?: number;
}

/**
 * Post (Model)
 */
export interface Post {
  comments?: UserPostComment[];
  created_at?: string;
  description: string;
  dislikes?: UserPostLike[];
  id: number;
  likes?: UserPostLike[];
  options: PostOption[];
  tag?: PostTag;
  tag_id?: number;
  title: string;
  updated_at?: string;
  user: User;
  user_id?: number;
  user_options?: UserPostOption[];
  user_reactions?: UserPostLike[];
}

/**
 * PostTag (Model)
 */
export interface PostTag {
  created_at?: string;
  id: number;
  posts?: Post[];
  updated_at?: string;
  value: string;
}

/**
 * PostOption (Model)
 */
export interface PostOption {
  created_at?: string;
  id: number;
  option: string;
  post?: Post;
  post_id?: number;
  updated_at?: string;
  user_options?: UserPostOption[];
}

/**
 * UserPostOption (Model)
 */
export interface UserPostOption {
  created_at?: string;
  id: number;
  option_id?: number;
  post?: Post;
  post_id?: number;
  post_option?: PostOption;
  updated_at?: string;
  user?: User;
  user_id?: number;
}

/**
 * UserInterface (Interface)
 */
export interface UserInterface {
  /** @nullable */
  balance?: number | null;
  /** */
  createdAt?: string;
  /** */
  email?: string;
  /** @nullable */
  firstName?: string | null;
  /** */
  id?: number;
  /** @nullable */
  lastName?: string | null;
  /** */
  username?: string;
}

/**
 * UserResultInterface (Interface)
 */
export interface UserResultInterface {
  /** */
  token?: string;
  /** */
  user?: UserInterface;
}

/**
 * PostsPaginatedInterface (Interface)
 */
export interface PostsPaginatedInterface {
  data?: PostInterface[];
}

/**
 * PostTagInterface (Interface)
 */
export interface PostTagInterface {
  /** */
  id?: number;
  /** */
  value?: string;
}

/**
 * PostOptionInterface (Interface)
 */
export interface PostOptionInterface {
  /** */
  id?: number;
  /** */
  option?: string;
  /** */
  total?: number;
}

/**
 * PostInterface (Interface)
 */
export interface PostInterface {
  /** @nullable */
  answer?: number | null;
  /** */
  createdAt?: string;
  /** */
  description?: string;
  dislikes?: UserPostLike[];
  /** */
  id?: number;
  /** @nullable */
  isLiked?: boolean | null;
  likes?: UserPostLike[];
  options?: PostOptionInterface[];
  /** */
  tag?: PostTagInterface;
  /** */
  title?: string;
  /** */
  total?: number;
  /** */
  user?: UserInterface;
}

/**
 * CommentInterface (Interface)
 */
export interface CommentInterface {
  /** */
  comment?: string;
  /** */
  createdAt?: string;
  /** */
  deletedAt?: string;
  /** */
  id?: number;
  /** */
  postId?: number;
  /** @nullable */
  repliesAmount?: number | null;
  /** @nullable */
  replyId?: number | null;
  /** */
  user?: UserInterface;
}

/**
 * CommentPaginatedInterface (Interface)
 */
export interface CommentPaginatedInterface {
  data?: CommentInterface[];
}

export interface PaginationMeta {
  /** */
  currentPage?: number;
  /** */
  firstPage?: number;
  /** */
  firstPageUrl?: string;
  /** */
  lastPage?: number;
  /** */
  lastPageUrl?: string;
  /** */
  nextPageUrl?: string;
  /** */
  page?: number;
  /** */
  perPage?: number;
  /** */
  previousPageUrl?: string;
  /** */
  total?: number;
}

/**
 * Any JSON object not defined as schema
 */
export interface Any {}
